/**
 * –¢–µ—Å—Ç –º—ñ–≥—Ä–∞—Ü—ñ—ó Movement Service v2
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ä–æ–±–æ—Ç—É –∑ –æ–±–æ–º–∞ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö: SQLite —ñ Supabase
 */

require('dotenv').config();
const MovementServiceV2 = require('./services/movementService-v2');
const ProductServiceV2 = require('./services/productService-v2');

// –ú–æ–∫–∞—î–º–æ OperationsLogController –¥–ª—è —Ç–µ—Å—Ç—ñ–≤
const mockOperationsLogController = {
    OPERATION_TYPES: {
        MOVEMENT_CREATE: 'MOVEMENT_CREATE',
        MOVEMENT_UPDATE: 'MOVEMENT_UPDATE',
        MOVEMENT_DELETE: 'MOVEMENT_DELETE'
    },
    logOperation: async (data) => {
        console.log('üìù [MOCK] –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó:', data.operation_type);
        return true;
    }
};

async function testMovementServiceMigration() {
    console.log('üß™ ===== –¢–ï–°–¢ –ú–Ü–ì–†–ê–¶–Ü–á MOVEMENT SERVICE =====\n');
    
    try {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏
        MovementServiceV2.initialize({ OperationsLogController: mockOperationsLogController });
        ProductServiceV2.initialize({ OperationsLogController: mockOperationsLogController });
        
        const useSupabase = process.env.USE_SUPABASE === 'true';
        console.log(`üîß –†–µ–∂–∏–º –ë–î: ${useSupabase ? 'Supabase PostgreSQL' : 'SQLite'}\n`);
        
        // 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—ñ–≤
        console.log('üì¶ 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤...');
        const products = await ProductServiceV2.getAllProducts();
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä—ñ–≤\n`);
        
        if (products.length === 0) {
            throw new Error('–ù–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—É—Ö—ñ–≤');
        }
        
        const testProduct = products[0];
        console.log(`üìã –¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä: "${testProduct.name}" (ID: ${testProduct.id})`);
        console.log(`üìä –ü–æ—Ç–æ—á–Ω–∏–π –∑–∞–ª–∏—à–æ–∫: ${testProduct.stock_pieces} —à—Ç\n`);
        
        // 2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä—É—Ö—ñ–≤
        console.log('üìã 2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä—É—Ö—ñ–≤...');
        const movements = await MovementServiceV2.getAllMovements({ limit: 10 });
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${movements.data.length} —Ä—É—Ö—ñ–≤`);
        
        movements.data.forEach((movement, index) => {
            console.log(`   ${index + 1}. ${movement.movement_type} - ${movement.pieces} —à—Ç "${movement.product_name}" (${movement.reason})`);
        });
        console.log('');
        
        // 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ä—É—Ö—É (IN)
        console.log('‚ûï 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ä—É—Ö—É (IN)...');
        const newMovementData = {
            product_id: testProduct.id,
            movement_type: 'IN',
            pieces: 10,
            boxes: 1,
            reason: '–¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–∏—Ö—ñ–¥ —Ç–æ–≤–∞—Ä—É',
            user: 'test-user'
        };
        
        const createdMovement = await MovementServiceV2.createMovement(newMovementData);
        console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ä—É—Ö –∑ ID: ${createdMovement.data.id}`);
        console.log(`üìä –î–µ—Ç–∞–ª—ñ: ${createdMovement.data.movement_type} ${createdMovement.data.pieces} —à—Ç\n`);
        
        // 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤
        console.log('üîÑ 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤ —Ç–æ–≤–∞—Ä—É...');
        const updatedProduct = await ProductServiceV2.getProductById(testProduct.id);
        const expectedStock = testProduct.stock_pieces + 10;
        
        if (updatedProduct.stock_pieces === expectedStock) {
            console.log(`‚úÖ –ó–∞–ª–∏—à–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ: ${testProduct.stock_pieces} ‚Üí ${updatedProduct.stock_pieces}`);
        } else {
            console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤: –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—å ${expectedStock}, –æ—Ç—Ä–∏–º–∞–Ω–æ ${updatedProduct.stock_pieces}`);
        }
        console.log('');
        
        // 5. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—É—Ö—ñ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É
        console.log('üîç 5. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—É—Ö—ñ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä—É...');
        const productMovements = await MovementServiceV2.getMovementsByProduct(testProduct.id, { limit: 5 });
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${productMovements.data.length} —Ä—É—Ö—ñ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä—É "${testProduct.name}"`);
        
        productMovements.data.forEach((movement, index) => {
            console.log(`   ${index + 1}. ${movement.movement_type} - ${movement.pieces} —à—Ç (${movement.created_at})`);
        });
        console.log('');
        
        // 6. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä—É—Ö—É
        console.log('‚úèÔ∏è 6. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä—É—Ö—É...');
        const updateData = {
            reason: '–û–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞ —Ä—É—Ö—É',
            user: 'updated-user'
        };
        
        const updatedMovement = await MovementServiceV2.updateMovement(createdMovement.data.id, updateData);
        console.log(`‚úÖ –†—É—Ö –æ–Ω–æ–≤–ª–µ–Ω–æ: "${updatedMovement.data.reason}"`);
        console.log(`üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${updatedMovement.data.user}\n`);
        
        // 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä—É—Ö—ñ–≤
        console.log('üìä 7. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä—É—Ö—ñ–≤...');
        const stats = await MovementServiceV2.getMovementStatistics({
            product_id: testProduct.id,
            start_date: '2025-01-01'
        });
        
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞, –∑–∞–ø–∏—Å—ñ–≤: ${stats.data.length}`);
        stats.data.forEach(stat => {
            console.log(`   ${stat.movement_type}: ${stat.count} –æ–ø–µ—Ä–∞—Ü—ñ–π, ${stat.total_pieces} —à—Ç`);
        });
        console.log('');
        
        // 8. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—É—Ö—É OUT –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        console.log('‚ûñ 8. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—É—Ö—É OUT...');
        const outMovementData = {
            product_id: testProduct.id,
            movement_type: 'OUT',
            pieces: 5,
            boxes: 0,
            reason: '–¢–µ—Å—Ç–æ–≤–∞ –≤–∏–¥–∞—á–∞ —Ç–æ–≤–∞—Ä—É',
            user: 'test-user'
        };
        
        const outMovement = await MovementServiceV2.createMovement(outMovementData);
        console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ OUT —Ä—É—Ö –∑ ID: ${outMovement.data.id}`);
        console.log(`üìä –í–∏–¥–∞–Ω–æ: ${outMovement.data.pieces} —à—Ç\n`);
        
        // 9. –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä—É—Ö—É
        console.log('üóëÔ∏è 9. –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä—É—Ö—É...');
        await MovementServiceV2.deleteMovement(createdMovement.data.id);
        console.log(`‚úÖ –†—É—Ö –∑ ID ${createdMovement.data.id} –≤–∏–¥–∞–ª–µ–Ω–æ\n`);
        
        // 10. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        console.log('‚Ü©Ô∏è 10. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤...');
        const finalProduct = await ProductServiceV2.getProductById(testProduct.id);
        
        // –ü—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è IN —Ä—É—Ö—É –∑–∞–ª–∏—à–∫–∏ –º–∞—é—Ç—å –∑–º–µ–Ω—à–∏—Ç–∏—Å—å –Ω–∞ 10
        // –ê–ª–µ OUT —Ä—É—Ö –Ω–∞ 5 —à—Ç –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è, —Ç–æ–º—É –∑–∞–≥–∞–ª—å–Ω–µ –∑–º–µ–Ω—à–µ–Ω–Ω—è: 10 - 5 = 5
        const expectedFinalStock = testProduct.stock_pieces - 5;
        
        if (finalProduct.stock_pieces === expectedFinalStock) {
            console.log(`‚úÖ –ó–∞–ª–∏—à–∫–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ: ${finalProduct.stock_pieces} —à—Ç`);
        } else {
            console.log(`‚ö†Ô∏è –ó–∞–ª–∏—à–∫–∏: –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—å ${expectedFinalStock}, –æ—Ç—Ä–∏–º–∞–Ω–æ ${finalProduct.stock_pieces}`);
        }
        
        console.log('\nüéâ ===== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û =====');
        console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ${useSupabase ? 'Supabase' : 'SQLite'}`);
        console.log('‚úÖ –í—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ —Ä—É—Ö–∞–º–∏ –ø—Ä–∞—Ü—é—é—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ');
        console.log('‚úÖ –ó–∞–ª–∏—à–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
        console.log('‚úÖ MovementService v2 –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è\n');
        
    } catch (error) {
        console.error('‚ùå –ü–û–ú–ò–õ–ö–ê –í –¢–ï–°–¢–Ü:', error);
        console.error('üìç Stack trace:', error.stack);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
if (require.main === module) {
    testMovementServiceMigration()
        .then(() => {
            console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { testMovementServiceMigration };