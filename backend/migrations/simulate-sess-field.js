const { supabase } = require('../supabase-client');

/**
 * –°–∏–º—É–ª—è—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—è sess –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
 * –í —Ä–µ–∞–ª—å–Ω–æ–º—É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ SQL —á–µ—Ä–µ–∑ Supabase Dashboard
 */
async function simulateSessField() {
    console.log('üîß –°–∏–º—É–ª—è—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—è sess –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏...');
    
    try {
        // –¢–µ—Å—Ç—É—î–º–æ, —á–∏ –º–æ–∂–µ–º–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –ø–æ–ª–µ–º sess
        const testSessionData = {
            session_id: 'dev-test-' + Date.now(),
            expires_at: new Date(Date.now() + 3600000).toISOString(),
            user_id: 43, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            ip_address: '127.0.0.1',
            user_agent: 'Development Test',
            active: 1
        };
        
        // –°–ø—Ä–æ–±—É—î–º–æ –≤—Å—Ç–∞–≤–∏—Ç–∏ –±–µ–∑ –ø–æ–ª—è sess
        console.log('üìã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—Ç–∞–≤–∫–∏ –±–µ–∑ –ø–æ–ª—è sess...');
        const { data: insertData, error: insertError } = await supabase
            .from('user_sessions')
            .insert(testSessionData)
            .select()
            .single();
        
        if (insertError) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–≤–∫–∏:', insertError.message);
            return false;
        }
        
        console.log('‚úÖ –ë–∞–∑–æ–≤–∞ –≤—Å—Ç–∞–≤–∫–∞ –ø—Ä–∞—Ü—é—î');
        
        // –°–ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ –∑ –ø–æ–ª–µ–º sess
        console.log('üìã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –ø–æ–ª–µ–º sess...');
        const { error: updateError } = await supabase
            .from('user_sessions')
            .update({ 
                sess: { 
                    test: true, 
                    development: true,
                    cookie: { maxAge: 3600000 }
                }
            })
            .eq('id', insertData.id);
        
        if (updateError) {
            console.warn('‚ö†Ô∏è  –ü–æ–ª–µ sess –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ:', updateError.message);
            console.log('üí° –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–∑—Ä–æ–±–∫—É –±–µ–∑ –ø–æ–ª—è sess');
            console.log('üí° –í production –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ SQL —Å–∫—Ä–∏–ø—Ç add-sess-field.sql');
            
            // –û—á–∏—â–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Å
            await supabase
                .from('user_sessions')
                .delete()
                .eq('id', insertData.id);
            
            return 'partial'; // –ß–∞—Å—Ç–∫–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞
        }
        
        // –¢–µ—Å—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑ –ø–æ–ª–µ–º sess
        const { data: selectData, error: selectError } = await supabase
            .from('user_sessions')
            .select('*')
            .eq('id', insertData.id)
            .single();
        
        if (selectError) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è:', selectError.message);
            return false;
        }
        
        if (selectData.sess && selectData.sess.test) {
            console.log('‚úÖ –ü–æ–ª–µ sess –ø—Ä–∞—Ü—é—î –ø–æ–≤–Ω—ñ—Å—Ç—é!');
        }
        
        // –û—á–∏—â–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Å
        await supabase
            .from('user_sessions')
            .delete()
            .eq('id', insertData.id);
        
        console.log('‚úÖ –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ');
        return true;
        
    } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–º—É–ª—è—Ü—ñ—ó:', err.message);
        return false;
    }
}

if (require.main === module) {
    simulateSessField()
        .then(result => {
            if (result === 'partial') {
                console.log('‚ö†Ô∏è  –ß–∞—Å—Ç–∫–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ - –º–æ–∂–Ω–∞ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ —Ä–æ–∑—Ä–æ–±–∫—É');
                process.exit(0);
            } else if (result) {
                console.log('‚úÖ –ü–æ–≤–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ - –≤—Å–µ –≥–æ—Ç–æ–≤–æ');
                process.exit(0);
            } else {
                console.error('‚ùå –°–∏–º—É–ª—è—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è');
                process.exit(1);
            }
        })
        .catch(err => {
            console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', err);
            process.exit(1);
        });
}

module.exports = { simulateSessField }; 