-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ production –≤ Supabase
-- –ï—Ç–∞–ø 4, –ö—Ä–æ–∫ 7: –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ - –∑–∞–ø–∏—Å–∏ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: products, users

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.production CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ production
CREATE TABLE public.production (
    id BIGSERIAL PRIMARY KEY,
    product_id BIGINT NOT NULL REFERENCES public.products(id),
    production_date DATE NOT NULL,
    production_time TIME,
    total_quantity INTEGER NOT NULL,
    boxes_quantity INTEGER NOT NULL,
    pieces_quantity INTEGER NOT NULL,
    expiry_date DATE NOT NULL,
    responsible TEXT DEFAULT 'system',
    notes TEXT,
    created_by_user_id BIGINT REFERENCES public.users(id),
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_production_product_id ON public.production(product_id);
CREATE INDEX idx_production_date ON public.production(production_date);
CREATE INDEX idx_production_expiry ON public.production(expiry_date);
CREATE INDEX idx_production_created_by ON public.production(created_by_user_id);

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.production IS '–ó–∞–ø–∏—Å–∏ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó';
COMMENT ON COLUMN public.production.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production.product_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä';
COMMENT ON COLUMN public.production.production_date IS '–î–∞—Ç–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production.production_time IS '–ß–∞—Å –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production.total_quantity IS '–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤ —à—Ç—É–∫–∞—Ö';
COMMENT ON COLUMN public.production.boxes_quantity IS '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤–Ω–∏—Ö –∫–æ—Ä–æ–±–æ–∫';
COMMENT ON COLUMN public.production.pieces_quantity IS '–ó–∞–ª–∏—à–æ–∫ –≤ —à—Ç—É–∫–∞—Ö';
COMMENT ON COLUMN public.production.expiry_date IS '–¢–µ—Ä–º—ñ–Ω –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ';
COMMENT ON COLUMN public.production.responsible IS '–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∞ –æ—Å–æ–±–∞ (legacy)';
COMMENT ON COLUMN public.production.created_by_user_id IS '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–æ —Å—Ç–≤–æ—Ä–∏–≤ –∑–∞–ø–∏—Å';

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
INSERT INTO public.production (
    product_id,
    production_date,
    production_time,
    total_quantity,
    boxes_quantity,
    pieces_quantity,
    expiry_date,
    responsible,
    notes,
    created_by_user_id
) VALUES 
    -- –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ü—ñ—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
    (1, '2025-07-20', '10:30:00', 144, 12, 0, '2026-07-20', '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', '–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø–∞—Ä—Ç—ñ—ó ‚Ññ1', 1),
    (1, '2025-07-15', '09:15:00', 72, 6, 0, '2026-07-15', '–ú–∞—Ä—ñ—è –°–∏–¥–æ—Ä–æ–≤–∞', '–°—Ç–∞—Ä–∞ –ø–∞—Ä—Ç—ñ—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è FIFO', 1),
    
    -- –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ü—ñ—Ü–∞ –ü–µ–ø–µ—Ä–æ–Ω—ñ
    (2, '2025-07-21', '11:45:00', 96, 8, 0, '2026-07-21', '–û–ª–µ–≥ –ö–æ–≤–∞–ª–µ–Ω–∫–æ', '–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø–∞—Ä—Ç—ñ—ó ‚Ññ2', 2),
    
    -- –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ü—ñ—Ü–∞ –ì–∞–≤–∞–π—Å—å–∫–∞
    (3, '2025-07-22', '14:20:00', 50, 5, 0, '2026-07-22', '–ê–Ω–Ω–∞ –Ü–≤–∞–Ω–µ–Ω–∫–æ', '–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø–∞—Ä—Ç—ñ—ó ‚Ññ3', 2),
    
    -- –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ü—ñ—Ü–∞ –ß–æ—Ç–∏—Ä–∏ –°–∏—Ä–∏
    (4, '2025-07-23', '08:00:00', 32, 4, 0, '2026-07-23', '–ü–µ—Ç—Ä–æ –ú–∏—Ö–∞–π–ª–æ–≤', '–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø–∞—Ä—Ç—ñ—ó ‚Ññ4', 3);

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_productions,
    SUM(total_quantity) as total_produced,
    COUNT(DISTINCT product_id) as products_produced,
    MIN(production_date) as first_production,
    MAX(production_date) as last_production
FROM public.production;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –∑ —Ç–æ–≤–∞—Ä–∞–º–∏ —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
SELECT 
    p.id,
    prod.name as product_name,
    prod.code as product_code,
    p.production_date,
    p.production_time,
    p.total_quantity,
    p.boxes_quantity,
    p.pieces_quantity,
    p.responsible,
    u.username as created_by_user
FROM public.production p
JOIN public.products prod ON p.product_id = prod.id
LEFT JOIN public.users u ON p.created_by_user_id = u.id
ORDER BY p.production_date DESC, p.production_time DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ
SELECT 
    prod.name as product_name,
    p.production_date,
    p.expiry_date,
    (p.expiry_date - CURRENT_DATE) as days_until_expiry,
    CASE 
        WHEN p.expiry_date < CURRENT_DATE THEN 'EXPIRED'
        WHEN p.expiry_date < CURRENT_DATE + INTERVAL '30 days' THEN 'EXPIRING_SOON'
        ELSE 'GOOD'
    END as expiry_status
FROM public.production p
JOIN public.products prod ON p.product_id = prod.id
ORDER BY p.expiry_date;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –ø–æ —Ç–æ–≤–∞—Ä–∞—Ö
SELECT 
    prod.name as product_name,
    COUNT(*) as production_count,
    SUM(p.total_quantity) as total_produced,
    AVG(p.total_quantity) as avg_batch_size,
    MIN(p.production_date) as first_produced,
    MAX(p.production_date) as last_produced
FROM public.production p
JOIN public.products prod ON p.product_id = prod.id
GROUP BY prod.id, prod.name
ORDER BY total_produced DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'production' 
    AND schemaname = 'public'
ORDER BY indexname;