-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ order_items –≤ Supabase
-- –ï—Ç–∞–ø 3, –ö—Ä–æ–∫ 6: –û—Å–Ω–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó - –ø–æ–∑–∏—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω—å
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: orders, products

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.order_items CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ order_items
CREATE TABLE public.order_items (
    id BIGSERIAL PRIMARY KEY,
    order_id BIGINT NOT NULL REFERENCES public.orders(id) ON DELETE CASCADE,
    product_id BIGINT NOT NULL REFERENCES public.products(id),
    quantity INTEGER NOT NULL,
    boxes INTEGER NOT NULL,
    pieces INTEGER NOT NULL,
    reserved_quantity INTEGER DEFAULT 0,
    produced_quantity INTEGER DEFAULT 0,
    notes TEXT,
    allocated_batches JSONB,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_order_items_order_id ON public.order_items(order_id);
CREATE INDEX idx_order_items_product_id ON public.order_items(product_id);
CREATE INDEX idx_order_items_reserved ON public.order_items(reserved_quantity);
CREATE INDEX idx_order_items_produced ON public.order_items(produced_quantity);

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.order_items IS '–ü–æ–∑–∏—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è–º –ø–∞—Ä—Ç—ñ–π';
COMMENT ON COLUMN public.order_items.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ø–æ–∑–∏—Ü—ñ—ó';
COMMENT ON COLUMN public.order_items.order_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';
COMMENT ON COLUMN public.order_items.product_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä';
COMMENT ON COLUMN public.order_items.quantity IS '–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤ —à—Ç—É–∫–∞—Ö';
COMMENT ON COLUMN public.order_items.boxes IS '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤ –∫–æ—Ä–æ–±–∫–∞—Ö';
COMMENT ON COLUMN public.order_items.pieces IS '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤ —à—Ç—É–∫–∞—Ö (–∑–∞–ª–∏—à–æ–∫ –≤—ñ–¥ –∫–æ—Ä–æ–±–æ–∫)';
COMMENT ON COLUMN public.order_items.reserved_quantity IS '–ó–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å';
COMMENT ON COLUMN public.order_items.produced_quantity IS '–í–∏—Ä–æ–±–ª–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å';
COMMENT ON COLUMN public.order_items.allocated_batches IS 'JSON –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–∏–º–∏ –ø–∞—Ä—Ç—ñ—è–º–∏';

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ (–ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è —ñ—Å–Ω—É—é—á–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å)
INSERT INTO public.order_items (
    order_id,
    product_id,
    quantity,
    boxes,
    pieces,
    reserved_quantity,
    notes,
    allocated_batches
) VALUES 
    -- –ü–æ–∑–∏—Ü—ñ—ó –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 20250724-001
    (1, 1, 60, 5, 0, 60, '–ü—ñ—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –¥–ª—è –¢–û–í "–°–º–∞—á–Ω—ñ –ø—ñ—Ü–∏"',
     '[{"batch_id": 1, "batch_date": "2025-07-20", "quantity": 60}]'::jsonb),
    
    (1, 2, 40, 3, 4, 40, '–ü—ñ—Ü–∞ –ü–µ–ø–µ—Ä–æ–Ω—ñ –¥–ª—è –¢–û–í "–°–º–∞—á–Ω—ñ –ø—ñ—Ü–∏"',
     '[{"batch_id": 2, "batch_date": "2025-07-21", "quantity": 40}]'::jsonb),
    
    -- –ü–æ–∑–∏—Ü—ñ—ó –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 20250724-002
    (2, 1, 48, 4, 0, 48, '–ü—ñ—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –¥–ª—è –†–µ—Å—Ç–æ—Ä–∞–Ω "–Ü—Ç–∞–ª—å—è–Ω–æ"',
     '[{"batch_id": 5, "batch_date": "2025-07-15", "quantity": 48}]'::jsonb),
    
    (2, 3, 32, 3, 2, 32, '–ü—ñ—Ü–∞ –ì–∞–≤–∞–π—Å—å–∫–∞ –¥–ª—è –†–µ—Å—Ç–æ—Ä–∞–Ω "–Ü—Ç–∞–ª—å—è–Ω–æ"',
     '[{"batch_id": 3, "batch_date": "2025-07-22", "quantity": 32}]'::jsonb),
    
    -- –ü–æ–∑–∏—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 20250723-001
    (3, 4, 32, 4, 0, 0, '–ü—ñ—Ü–∞ –ß–æ—Ç–∏—Ä–∏ –°–∏—Ä–∏ –¥–ª—è –ö–∞—Ñ–µ "Corner" (–≤–∏–∫–æ–Ω–∞–Ω–æ)',
     '[{"batch_id": 4, "batch_date": "2025-07-23", "quantity": 32}]'::jsonb),
    
    (3, 2, 18, 1, 6, 0, '–ü—ñ—Ü–∞ –ü–µ–ø–µ—Ä–æ–Ω—ñ –¥–ª—è –ö–∞—Ñ–µ "Corner" (–≤–∏–∫–æ–Ω–∞–Ω–æ)',
     '[{"batch_id": 2, "batch_date": "2025-07-21", "quantity": 18}]'::jsonb);

-- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è—Ö
UPDATE public.orders 
SET total_quantity = (
    SELECT COALESCE(SUM(quantity), 0) 
    FROM public.order_items 
    WHERE order_id = orders.id
),
total_boxes = (
    SELECT COALESCE(SUM(boxes), 0) 
    FROM public.order_items 
    WHERE order_id = orders.id
);

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_items,
    SUM(quantity) as total_quantity,
    SUM(reserved_quantity) as total_reserved,
    COUNT(DISTINCT order_id) as orders_with_items
FROM public.order_items;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–∑–∏—Ü—ñ–π –∑ —Ç–æ–≤–∞—Ä–∞–º–∏ —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏
SELECT 
    o.order_number,
    p.name as product_name,
    oi.quantity,
    oi.boxes,
    oi.pieces,
    oi.reserved_quantity,
    oi.allocated_batches
FROM public.order_items oi
JOIN public.orders o ON oi.order_id = o.id
JOIN public.products p ON oi.product_id = p.id
ORDER BY o.order_date DESC, oi.id;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ CASCADE DELETE
SELECT 
    'CASCADE DELETE test: If you delete order, all items should be deleted too' as info;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ JSONB allocated_batches
SELECT 
    id,
    product_id,
    quantity,
    jsonb_array_length(allocated_batches) as batches_count,
    allocated_batches
FROM public.order_items
WHERE allocated_batches IS NOT NULL
ORDER BY id;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'order_items' 
    AND schemaname = 'public'
ORDER BY indexname;