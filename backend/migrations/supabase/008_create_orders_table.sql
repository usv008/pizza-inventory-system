-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ orders –≤ Supabase
-- –ï—Ç–∞–ø 3, –ö—Ä–æ–∫ 5: –û—Å–Ω–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó - –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: clients, users

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.orders CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ orders
CREATE TABLE public.orders (
    id BIGSERIAL PRIMARY KEY,
    order_number TEXT UNIQUE NOT NULL,
    client_id BIGINT REFERENCES public.clients(id),
    client_name TEXT NOT NULL,
    client_contact TEXT,
    order_date DATE NOT NULL,
    delivery_date DATE,
    status TEXT DEFAULT 'NEW',
    total_quantity INTEGER DEFAULT 0,
    total_boxes INTEGER DEFAULT 0,
    notes TEXT,
    created_by TEXT DEFAULT 'system',
    created_by_user_id BIGINT REFERENCES public.users(id),
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_orders_order_date ON public.orders(order_date);
CREATE INDEX idx_orders_status ON public.orders(status);
CREATE INDEX idx_orders_client_id ON public.orders(client_id);
CREATE INDEX idx_orders_delivery_date ON public.orders(delivery_date);
CREATE INDEX idx_orders_created_by_user_id ON public.orders(created_by_user_id);

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.orders IS '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤';
COMMENT ON COLUMN public.orders.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';
COMMENT ON COLUMN public.orders.order_number IS '–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—É–Ω—ñ–∫–∞–ª—å–Ω–∏–π)';
COMMENT ON COLUMN public.orders.client_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–ª—ñ—î–Ω—Ç–∞';
COMMENT ON COLUMN public.orders.client_name IS '–ù–∞–∑–≤–∞ –∫–ª—ñ—î–Ω—Ç–∞ (–∫–æ–ø—ñ—è –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó)';
COMMENT ON COLUMN public.orders.client_contact IS '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞ –∫–ª—ñ—î–Ω—Ç–∞';
COMMENT ON COLUMN public.orders.order_date IS '–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';
COMMENT ON COLUMN public.orders.delivery_date IS '–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏';
COMMENT ON COLUMN public.orders.status IS '–°—Ç–∞—Ç—É—Å: NEW, IN_PROGRESS, COMPLETED, CANCELLED';
COMMENT ON COLUMN public.orders.total_quantity IS '–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ –≤ —à—Ç—É–∫–∞—Ö';
COMMENT ON COLUMN public.orders.total_boxes IS '–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤ –∫–æ—Ä–æ–±–∫–∞—Ö';
COMMENT ON COLUMN public.orders.created_by IS '–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ (legacy –ø–æ–ª–µ)';
COMMENT ON COLUMN public.orders.created_by_user_id IS '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á, —â–æ —Å—Ç–≤–æ—Ä–∏–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';

-- –¢—Ä–∏–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_orders_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_orders_updated_at
    BEFORE UPDATE ON public.orders
    FOR EACH ROW
    EXECUTE FUNCTION update_orders_updated_at();

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
INSERT INTO public.orders (
    order_number,
    client_id,
    client_name,
    client_contact,
    order_date,
    delivery_date,
    status,
    total_quantity,
    total_boxes,
    notes,
    created_by
) VALUES 
    ('20250724-001', 1, '–¢–û–í "–°–º–∞—á–Ω—ñ –ø—ñ—Ü–∏"', '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ', '2025-07-24', '2025-07-26', 'NEW', 100, 10, '–¢–µ—Å—Ç–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ú–∞—Ä–≥–∞—Ä–∏—Ç–∏', 'system'),
    ('20250724-002', 2, '–†–µ—Å—Ç–æ—Ä–∞–Ω "–Ü—Ç–∞–ª—å—è–Ω–æ"', '–ú–∞—Ä—ñ—è –Ü–≤–∞–Ω–µ–Ω–∫–æ', '2025-07-24', '2025-07-27', 'NEW', 80, 8, '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ –≤–∏—Ö—ñ–¥–Ω—ñ', 'system'),
    ('20250723-001', 3, '–ö–∞—Ñ–µ "Corner"', '–û–ª–µ–≥ –°–∏–¥–æ—Ä–µ–Ω–∫–æ', '2025-07-23', '2025-07-25', 'COMPLETED', 50, 5, '–í–∏–∫–æ–Ω–∞–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', 'system');

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_orders,
    COUNT(*) FILTER (WHERE status = 'NEW') as new_orders,
    COUNT(*) FILTER (WHERE status = 'COMPLETED') as completed_orders,
    SUM(total_quantity) as total_quantity_ordered
FROM public.orders;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
SELECT 
    id,
    order_number,
    client_name,
    order_date,
    delivery_date,
    status,
    total_quantity,
    created_at
FROM public.orders
ORDER BY order_date DESC, created_at DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ foreign key –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏
SELECT 
    o.order_number,
    o.client_name,
    c.name as actual_client_name,
    c.contact_person,
    o.status
FROM public.orders o
LEFT JOIN public.clients c ON o.client_id = c.id
ORDER BY o.order_date DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'orders' 
    AND schemaname = 'public'
ORDER BY indexname;