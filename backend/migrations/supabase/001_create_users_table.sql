-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ users –≤ Supabase
-- –ï—Ç–∞–ø 2, –ö—Ä–æ–∫ 3: –°–∏—Å—Ç–µ–º–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ - –±–∞–∑–æ–≤–∞ —Ç–∞–±–ª–∏—Ü—è
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: –ù–µ–º–∞—î (self-referencing, –º–∞—î –±—É—Ç–∏ –ü–ï–†–®–û–Æ!)

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.users CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ users
CREATE TABLE public.users (
    id BIGSERIAL PRIMARY KEY,
    username TEXT UNIQUE NOT NULL,
    email TEXT UNIQUE,
    phone TEXT,
    password_hash TEXT,
    role TEXT NOT NULL DEFAULT '–ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö',
    permissions JSONB DEFAULT '{}'::jsonb,
    first_login BOOLEAN DEFAULT TRUE,
    active BOOLEAN DEFAULT TRUE,
    created_by BIGINT REFERENCES public.users(id), -- Self-referencing FK
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_users_username ON public.users(username);
CREATE INDEX idx_users_email ON public.users(email);
CREATE INDEX idx_users_role ON public.users(role);
CREATE INDEX idx_users_active ON public.users(active);
CREATE INDEX idx_users_created_by ON public.users(created_by);

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.users IS '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Å–∏—Å—Ç–µ–º–∏ –∑ —Ä–æ–ª—è–º–∏ —Ç–∞ –¥–æ–∑–≤–æ–ª–∞–º–∏';
COMMENT ON COLUMN public.users.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';
COMMENT ON COLUMN public.users.username IS '–£–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';
COMMENT ON COLUMN public.users.email IS '–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞ (—É–Ω—ñ–∫–∞–ª—å–Ω–∞)';
COMMENT ON COLUMN public.users.phone IS '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É';
COMMENT ON COLUMN public.users.password_hash IS '–•–µ—à –ø–∞—Ä–æ–ª—è (bcrypt)';
COMMENT ON COLUMN public.users.role IS '–†–æ–ª—å: –î–ò–†–ï–ö–¢–û–†, –ú–ï–ù–ï–î–ñ–ï–†, –ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö, —Ç–æ—â–æ';
COMMENT ON COLUMN public.users.permissions IS 'JSON –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –¥–æ–∑–≤–æ–ª–∞–º–∏';
COMMENT ON COLUMN public.users.first_login IS '–ß–∏ –ø–µ—Ä—à–∏–π —Ä–∞–∑ –ª–æ–≥—ñ–Ω–∏—Ç—å—Å—è (–¥–ª—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è)';
COMMENT ON COLUMN public.users.active IS '–ê–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á (soft delete)';
COMMENT ON COLUMN public.users.created_by IS '–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';

-- –¢—Ä–∏–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_users_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_users_updated_at
    BEFORE UPDATE ON public.users
    FOR EACH ROW
    EXECUTE FUNCTION update_users_updated_at();

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (ID=1, –±–µ–∑ created_by –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è self-reference)
INSERT INTO public.users (
    id, 
    username, 
    password_hash, 
    role, 
    permissions, 
    first_login, 
    active,
    created_by  -- NULL –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
) VALUES (
    1, 
    'admin', 
    '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', -- password: "password"
    '–î–ò–†–ï–ö–¢–û–†', 
    '{"all": true}'::jsonb, 
    FALSE, 
    TRUE,
    NULL
);

-- –¢–µ—Å—Ç–æ–≤—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ (—Å—Ç–≤–æ—Ä–µ–Ω—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
INSERT INTO public.users (
    username,
    email,
    phone,
    password_hash,
    role,
    permissions,
    first_login,
    active,
    created_by
) VALUES 
    ('manager1', 'manager@pizza.com', '+380501111111', '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '–ú–ï–ù–ï–î–ñ–ï–†', '{"orders": true, "clients": true}'::jsonb, TRUE, TRUE, 1),
    ('packer1', 'packer1@pizza.com', '+380502222222', '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '–ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö', '{"products": "read"}'::jsonb, TRUE, TRUE, 1),
    ('packer2', 'packer2@pizza.com', '+380503333333', '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '–ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö', '{"products": "read"}'::jsonb, TRUE, TRUE, 1),
    ('inactive_user', 'inactive@pizza.com', NULL, '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '–ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö', '{}'::jsonb, FALSE, FALSE, 1);

-- –ó–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ —â–æ sequence –ø–æ—á–Ω–µ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
SELECT setval('public.users_id_seq', (SELECT MAX(id) FROM public.users));

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_users,
    COUNT(*) FILTER (WHERE active = TRUE) as active_users,
    COUNT(*) FILTER (WHERE active = FALSE) as inactive_users,
    COUNT(*) FILTER (WHERE first_login = TRUE) as need_password_change
FROM public.users;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–ª–µ–π —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
SELECT 
    id,
    username,
    email,
    role,
    permissions,
    first_login,
    active,
    created_by,
    created_at
FROM public.users
ORDER BY id;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ self-referencing FK
SELECT 
    u.username as user,
    creator.username as created_by_user,
    u.role,
    u.active
FROM public.users u
LEFT JOIN public.users creator ON u.created_by = creator.id
ORDER BY u.id;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ JSONB permissions
SELECT 
    username,
    role,
    permissions,
    jsonb_pretty(permissions) as permissions_formatted
FROM public.users
WHERE permissions != '{}'::jsonb
ORDER BY id;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'users' 
    AND schemaname = 'public'
ORDER BY indexname;