-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ production_plan_items –≤ Supabase
-- –ï—Ç–∞–ø 6, –ö—Ä–æ–∫ 2: –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ - –ø–æ–∑–∏—Ü—ñ—ó –ø–ª–∞–Ω—ñ–≤ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: production_plans, products, orders, users (—Å—Ç–≤–æ—Ä–µ–Ω—ñ)

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.production_plan_items CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ production_plan_items
CREATE TABLE public.production_plan_items (
    id BIGSERIAL PRIMARY KEY,
    plan_id BIGINT NOT NULL REFERENCES public.production_plans(id) ON DELETE CASCADE,
    product_id BIGINT NOT NULL REFERENCES public.products(id) ON DELETE RESTRICT,
    quantity_needed INTEGER NOT NULL CHECK (quantity_needed > 0),
    quantity_planned INTEGER NOT NULL CHECK (quantity_planned >= 0),
    quantity_produced INTEGER DEFAULT 0 CHECK (quantity_produced >= 0),
    priority TEXT DEFAULT 'MEDIUM' CHECK (priority IN ('LOW', 'MEDIUM', 'HIGH', 'URGENT')),
    reason TEXT default 'OTHER' CHECK (reason IN ('ORDER', 'STOCK', 'SEASONAL', 'PROMO', 'OTHER')),
    order_id BIGINT REFERENCES public.orders(id) ON DELETE SET NULL,
    notes TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    created_by_user_id BIGINT REFERENCES public.users(id)
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_production_plan_items_plan_id ON public.production_plan_items(plan_id);
CREATE INDEX idx_production_plan_items_product_id ON public.production_plan_items(product_id);
CREATE INDEX idx_production_plan_items_order_id ON public.production_plan_items(order_id);
CREATE INDEX idx_production_plan_items_priority ON public.production_plan_items(priority);
CREATE INDEX idx_production_plan_items_reason ON public.production_plan_items(reason);
CREATE INDEX idx_production_plan_items_created_at ON public.production_plan_items(created_at);
CREATE INDEX idx_production_plan_items_created_by ON public.production_plan_items(created_by_user_id);

-- –ö–æ–º–ø–æ–∑–∏—Ç–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø–æ—à—É–∫—É –ø–æ –ø–ª–∞–Ω—É —Ç–∞ –ø—Ä–æ–¥—É–∫—Ç—É
CREATE INDEX idx_production_plan_items_plan_product ON public.production_plan_items(plan_id, product_id);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–∏–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_production_plan_items_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_production_plan_items_updated_at
    BEFORE UPDATE ON public.production_plan_items
    FOR EACH ROW
    EXECUTE FUNCTION update_production_plan_items_updated_at();

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.production_plan_items IS '–ü–æ–∑–∏—Ü—ñ—ó –ø–ª–∞–Ω—ñ–≤ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production_plan_items.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ø–æ–∑–∏—Ü—ñ—ó –ø–ª–∞–Ω—É';
COMMENT ON COLUMN public.production_plan_items.plan_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–ª–∞–Ω –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production_plan_items.product_id IS '–ü—Ä–æ–¥—É–∫—Ç –¥–ª—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production_plan_items.quantity_needed IS '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å (–Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω—å/–ø–æ—Ç—Ä–µ–±)';
COMMENT ON COLUMN public.production_plan_items.quantity_planned IS '–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –¥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞';
COMMENT ON COLUMN public.production_plan_items.quantity_produced IS '–§–∞–∫—Ç–∏—á–Ω–æ –≤–∏—Ä–æ–±–ª–µ–Ω–æ';
COMMENT ON COLUMN public.production_plan_items.priority IS '–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ (LOW, MEDIUM, HIGH, URGENT)';
COMMENT ON COLUMN public.production_plan_items.reason IS '–ü—Ä–∏—á–∏–Ω–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ (ORDER, STOCK, SEASONAL, PROMO, OTHER)';
COMMENT ON COLUMN public.production_plan_items.order_id IS '–ö–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—è–∫—â–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –ø—ñ–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)';
COMMENT ON COLUMN public.production_plan_items.notes IS '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∏–º—ñ—Ç–∫–∏';
COMMENT ON COLUMN public.production_plan_items.created_at IS '–ß–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—ó';
COMMENT ON COLUMN public.production_plan_items.updated_at IS '–ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è';
COMMENT ON COLUMN public.production_plan_items.created_by_user_id IS '–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ –ø–æ–∑–∏—Ü—ñ—é';

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
INSERT INTO public.production_plan_items (
    plan_id,
    product_id,
    quantity_needed,
    quantity_planned,
    quantity_produced,
    priority,
    reason,
    order_id,
    notes,
    created_by_user_id
) VALUES 
    (
        1, -- –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–µ—Ä—à–∏–π –ø–ª–∞–Ω (—Å—å–æ–≥–æ–¥–Ω—ñ)
        1, -- –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
        50,
        50,
        45,
        'HIGH',
        'ORDER',
        1, -- –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        '–ü–æ–ø—É–ª—è—Ä–Ω–∞ –ø—ñ—Ü–∞ - –≤–∏—Ä–æ–±–ª—è—î–º–æ –∑ —Ä–∞–Ω–∫—É',
        1
    ),
    (
        1, -- —Ç–æ–π –∂–µ –ø–ª–∞–Ω
        2, -- –ü–µ–ø–µ—Ä–æ–Ω—ñ
        30,
        35,
        25,
        'MEDIUM',
        'STOCK',
        NULL,
        '–î–æ–¥–∞—Ç–∫–æ–≤–æ –¥–ª—è –∑–∞–ø–∞—Å—É',
        1
    ),
    (
        1, -- —Ç–æ–π –∂–µ –ø–ª–∞–Ω
        3, -- –ß–æ—Ç–∏—Ä–∏ —Å–∏—Ä–∞
        20,
        25,
        20,
        'MEDIUM',
        'ORDER',
        2, -- —ñ–Ω—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞',
        1
    ),
    (
        2, -- –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞
        1, -- –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
        80,
        80,
        0,
        'HIGH',
        'ORDER',
        NULL,
        '–ó–±—ñ–ª—å—à—É—î–º–æ –æ–±—Å—è–≥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
        1
    ),
    (
        2, -- –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞
        4, -- –ì–∞–≤–∞–π—Å—å–∫–∞
        25,
        30,
        0,
        'LOW',
        'SEASONAL',
        NULL,
        '–õ—ñ—Ç–Ω—ñ–π —Å–µ–∑–æ–Ω - –ø–æ–ø—É–ª—è—Ä–Ω–∞ –∑ –∞–Ω–∞–Ω–∞—Å–æ–º',
        1
    ),
    (
        3, -- –ø–ª–∞–Ω –Ω–∞ –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞
        2, -- –ü–µ–ø–µ—Ä–æ–Ω—ñ
        40,
        40,
        0,
        'URGENT',
        'PROMO',
        NULL,
        '–ê–∫—Ü—ñ—è –Ω–∞ –≤–∏—Ö—ñ–¥–Ω—ñ - –æ—á—ñ–∫—É—î–º–æ –≤–∏—Å–æ–∫–∏–π –ø–æ–ø–∏—Ç',
        1
    );

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_items,
    COUNT(DISTINCT plan_id) as unique_plans,
    COUNT(DISTINCT product_id) as unique_products,
    SUM(quantity_needed) as total_needed,
    SUM(quantity_planned) as total_planned,
    SUM(quantity_produced) as total_produced
FROM public.production_plan_items;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
SELECT 
    ppi.id,
    pp.plan_date,
    p.name as product_name,
    ppi.quantity_needed,
    ppi.quantity_planned,
    ppi.quantity_produced,
    ppi.priority,
    ppi.reason,
    CASE 
        WHEN ppi.quantity_planned > 0 THEN ROUND((ppi.quantity_produced::NUMERIC / ppi.quantity_planned) * 100, 1)
        ELSE 0
    END as completion_percentage,
    ppi.notes
FROM public.production_plan_items ppi
JOIN public.production_plans pp ON ppi.plan_id = pp.id
JOIN public.products p ON ppi.product_id = p.id
ORDER BY pp.plan_date, ppi.priority DESC, p.name;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞—Ö
SELECT 
    priority,
    COUNT(*) as items_count,
    SUM(quantity_needed) as total_needed,
    SUM(quantity_planned) as total_planned,
    SUM(quantity_produced) as total_produced,
    CASE 
        WHEN SUM(quantity_planned) > 0 THEN ROUND((SUM(quantity_produced)::NUMERIC / SUM(quantity_planned)) * 100, 1)
        ELSE 0
    END as completion_rate
FROM public.production_plan_items
GROUP BY priority
ORDER BY 
    CASE priority 
        WHEN 'URGENT' THEN 1
        WHEN 'HIGH' THEN 2 
        WHEN 'MEDIUM' THEN 3
        WHEN 'LOW' THEN 4
    END;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–∞—Ö –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
SELECT 
    reason,
    COUNT(*) as items_count,
    SUM(quantity_needed) as total_needed,
    SUM(quantity_planned) as total_planned,
    SUM(quantity_produced) as total_produced
FROM public.production_plan_items
GROUP BY reason
ORDER BY items_count DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ foreign key –∑–≤'—è–∑–∫—ñ–≤
SELECT 
    ppi.id,
    pp.plan_date,
    pp.status as plan_status,
    p.name as product_name,
    p.code as product_code,
    o.client_name as order_client,
    u.username as created_by,
    ppi.quantity_planned,
    ppi.quantity_produced,
    ppi.priority
FROM public.production_plan_items ppi
JOIN public.production_plans pp ON ppi.plan_id = pp.id
JOIN public.products p ON ppi.product_id = p.id
LEFT JOIN public.orders o ON ppi.order_id = o.id
LEFT JOIN public.users u ON ppi.created_by_user_id = u.id
ORDER BY pp.plan_date, ppi.priority DESC;

-- –ê–≥—Ä–µ–≥–∞—Ü—ñ—è –ø–æ –ø–ª–∞–Ω–∞—Ö (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ü—ñ–ª—ñ—Å–Ω–æ—Å—Ç—ñ)
SELECT 
    pp.id as plan_id,
    pp.plan_date,
    pp.total_planned as plan_total_planned,
    SUM(ppi.quantity_planned) as items_total_planned,
    pp.total_produced as plan_total_produced,
    SUM(ppi.quantity_produced) as items_total_produced,
    COUNT(ppi.id) as items_count
FROM public.production_plans pp
LEFT JOIN public.production_plan_items ppi ON pp.id = ppi.plan_id
GROUP BY pp.id, pp.plan_date, pp.total_planned, pp.total_produced
ORDER BY pp.plan_date;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'production_plan_items' 
    AND schemaname = 'public'
ORDER BY indexname;