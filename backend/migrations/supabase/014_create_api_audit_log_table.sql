-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ api_audit_log –≤ Supabase
-- –ï—Ç–∞–ø 8, –ö—Ä–æ–∫ 3: –ê—É–¥–∏—Ç —ñ –ª–æ–≥—É–≤–∞–Ω–Ω—è - –ª–æ–≥ API –≤–∏–∫–ª–∏–∫—ñ–≤
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: users (—Å—Ç–≤–æ—Ä–µ–Ω–∞)

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.api_audit_log CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ api_audit_log
CREATE TABLE public.api_audit_log (
    id BIGSERIAL PRIMARY KEY,
    user_id BIGINT REFERENCES public.users(id) ON DELETE SET NULL,
    method TEXT NOT NULL CHECK (method IN ('GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD')),
    path TEXT NOT NULL,
    ip_address INET,
    user_agent TEXT,
    status_code INTEGER,
    duration INTEGER, -- –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
    success BOOLEAN DEFAULT TRUE,
    request_body JSONB,
    response_body JSONB,
    error_message TEXT,
    session_id TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    created_by_user_id BIGINT REFERENCES public.users(id)
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_api_audit_log_user_id ON public.api_audit_log(user_id);
CREATE INDEX idx_api_audit_log_method ON public.api_audit_log(method);
CREATE INDEX idx_api_audit_log_path ON public.api_audit_log(path);
CREATE INDEX idx_api_audit_log_status_code ON public.api_audit_log(status_code);
CREATE INDEX idx_api_audit_log_success ON public.api_audit_log(success);
CREATE INDEX idx_api_audit_log_created_at ON public.api_audit_log(created_at);
CREATE INDEX idx_api_audit_log_ip ON public.api_audit_log(ip_address);
CREATE INDEX idx_api_audit_log_session_id ON public.api_audit_log(session_id);
CREATE INDEX idx_api_audit_log_duration ON public.api_audit_log(duration);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –Ω–∞ JSONB –ø–æ–ª—è –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø–æ—à—É–∫—É
CREATE INDEX idx_api_audit_log_request_body_gin ON public.api_audit_log USING GIN (request_body);
CREATE INDEX idx_api_audit_log_response_body_gin ON public.api_audit_log USING GIN (response_body);

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.api_audit_log IS '–õ–æ–≥ API –≤–∏–∫–ª–∏–∫—ñ–≤ —Å–∏—Å—Ç–µ–º–∏';
COMMENT ON COLUMN public.api_audit_log.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å—É –ª–æ–≥—É';
COMMENT ON COLUMN public.api_audit_log.user_id IS '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —è–∫–∏–π –∑—Ä–æ–±–∏–≤ –∑–∞–ø–∏—Ç';
COMMENT ON COLUMN public.api_audit_log.method IS 'HTTP –º–µ—Ç–æ–¥ –∑–∞–ø–∏—Ç—É';
COMMENT ON COLUMN public.api_audit_log.path IS '–®–ª—è—Ö API –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É';
COMMENT ON COLUMN public.api_audit_log.ip_address IS 'IP –∞–¥—Ä–µ—Å–∞ –∫–ª—ñ—î–Ω—Ç–∞';
COMMENT ON COLUMN public.api_audit_log.user_agent IS 'User Agent –±—Ä–∞—É–∑–µ—Ä–∞/–∫–ª—ñ—î–Ω—Ç–∞';
COMMENT ON COLUMN public.api_audit_log.status_code IS 'HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ';
COMMENT ON COLUMN public.api_audit_log.duration IS '–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö';
COMMENT ON COLUMN public.api_audit_log.success IS '–ß–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ –∑–∞–ø–∏—Ç';
COMMENT ON COLUMN public.api_audit_log.request_body IS '–¢—ñ–ª–æ –∑–∞–ø–∏—Ç—É –≤ JSON —Ñ–æ—Ä–º–∞—Ç—ñ';
COMMENT ON COLUMN public.api_audit_log.response_body IS '–¢—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ JSON —Ñ–æ—Ä–º–∞—Ç—ñ';
COMMENT ON COLUMN public.api_audit_log.error_message IS '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É';
COMMENT ON COLUMN public.api_audit_log.session_id IS '–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';
COMMENT ON COLUMN public.api_audit_log.created_at IS '–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É';
COMMENT ON COLUMN public.api_audit_log.created_by_user_id IS '–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ –∑–∞–ø–∏—Å –ª–æ–≥—É';

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
INSERT INTO public.api_audit_log (
    user_id,
    method,
    path,
    ip_address,
    user_agent,
    status_code,
    duration,
    success,
    request_body,
    response_body,
    session_id,
    created_by_user_id
) VALUES 
    (
        1, -- admin user
        'GET',
        '/api/products',
        '192.168.1.100'::INET,
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        200,
        142,
        TRUE,
        NULL,
        '{"status": "success", "count": 25, "data": "..."}'::JSONB,
        'sess_get_' || gen_random_uuid()::text,
        1
    ),
    (
        1, -- admin user
        'POST',
        '/api/products',
        '192.168.1.100'::INET,
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        201,
        234,
        TRUE,
        '{"name": "–ù–æ–≤–∞ –ø—ñ—Ü–∞", "price": 150, "category": "–ø—ñ—Ü–∞"}'::JSONB,
        '{"status": "success", "id": 26, "created": true}'::JSONB,
        'sess_post_' || gen_random_uuid()::text,
        1
    ),
    (
        1, -- admin user
        'PUT',
        '/api/products/26',
        '192.168.1.100'::INET,
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        200,
        189,
        TRUE,
        '{"price": 160}'::JSONB,
        '{"status": "success", "updated": true}'::JSONB,
        'sess_put_' || gen_random_uuid()::text,
        1
    ),
    (
        1, -- admin user
        'DELETE',
        '/api/products/99',
        '192.168.1.100'::INET,
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        404,
        67,
        FALSE,
        NULL,
        '{"status": "error", "message": "Product not found"}'::JSONB,
        'sess_del_' || gen_random_uuid()::text,
        1
    ),
    (
        NULL, -- –∞–Ω–æ–Ω—ñ–º–Ω–∏–π –∑–∞–ø–∏—Ç
        'POST',
        '/api/auth/login',
        '45.142.213.99'::INET,
        'curl/7.68.0',
        401,
        423,
        FALSE,
        '{"username": "admin", "password": "wrong_password"}'::JSONB,
        '{"status": "error", "message": "Invalid credentials"}'::JSONB,
        NULL,
        1
    );

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_requests,
    COUNT(*) FILTER (WHERE success = TRUE) as successful_requests,
    COUNT(*) FILTER (WHERE success = FALSE) as failed_requests,
    COUNT(DISTINCT method) as unique_methods,
    COUNT(DISTINCT path) as unique_paths,
    COUNT(DISTINCT user_id) as unique_users,
    ROUND(AVG(duration)) as avg_duration_ms
FROM public.api_audit_log;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
SELECT 
    id,
    user_id,
    method,
    path,
    status_code,
    success,
    duration,
    created_at
FROM public.api_audit_log
ORDER BY created_at DESC;