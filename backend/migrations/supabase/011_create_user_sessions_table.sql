-- üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ user_sessions –≤ Supabase
-- –ï—Ç–∞–ø 2, –ö—Ä–æ–∫ 1: –°–∏—Å—Ç–µ–º–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ - —Å–µ—Å—ñ—ó
-- –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: users (—Å—Ç–≤–æ—Ä–µ–Ω–∞)

-- –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î (–¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
DROP TABLE IF EXISTS public.user_sessions CASCADE;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ user_sessions
CREATE TABLE public.user_sessions (
    id BIGSERIAL PRIMARY KEY,
    session_id TEXT UNIQUE NOT NULL,
    user_id BIGINT NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    expires_at TIMESTAMPTZ NOT NULL,
    ip_address INET,
    user_agent TEXT,
    active BOOLEAN DEFAULT TRUE,
    last_accessed_at TIMESTAMPTZ DEFAULT NOW(),
    created_by_user_id BIGINT REFERENCES public.users(id)
);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CREATE INDEX idx_user_sessions_session_id ON public.user_sessions(session_id);
CREATE INDEX idx_user_sessions_user_id ON public.user_sessions(user_id);
CREATE INDEX idx_user_sessions_active ON public.user_sessions(active);
CREATE INDEX idx_user_sessions_expires_at ON public.user_sessions(expires_at);
CREATE INDEX idx_user_sessions_created_at ON public.user_sessions(created_at);
CREATE INDEX idx_user_sessions_ip ON public.user_sessions(ip_address);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–∏–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_user_sessions_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.last_accessed_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_user_sessions_updated_at
    BEFORE UPDATE ON public.user_sessions
    FOR EACH ROW
    EXECUTE FUNCTION update_user_sessions_updated_at();

-- –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –∫–æ–ª–æ–Ω–æ–∫
COMMENT ON TABLE public.user_sessions IS '–°–µ—Å—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó';
COMMENT ON COLUMN public.user_sessions.id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó';
COMMENT ON COLUMN public.user_sessions.session_id IS '–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó (UUID)';
COMMENT ON COLUMN public.user_sessions.user_id IS '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';
COMMENT ON COLUMN public.user_sessions.created_at IS '–ß–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Å—ñ—ó';
COMMENT ON COLUMN public.user_sessions.expires_at IS '–ß–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Å–µ—Å—ñ—ó';
COMMENT ON COLUMN public.user_sessions.ip_address IS 'IP –∞–¥—Ä–µ—Å–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';
COMMENT ON COLUMN public.user_sessions.user_agent IS 'User Agent –±—Ä–∞—É–∑–µ—Ä–∞';
COMMENT ON COLUMN public.user_sessions.active IS '–ê–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å—ñ—è';
COMMENT ON COLUMN public.user_sessions.last_accessed_at IS '–ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –¥–æ—Å—Ç—É–ø—É';
COMMENT ON COLUMN public.user_sessions.created_by_user_id IS '–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ —Å–µ—Å—ñ—é (–¥–ª—è –∞—É–¥–∏—Ç—É)';

-- –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
INSERT INTO public.user_sessions (
    session_id,
    user_id,
    expires_at,
    ip_address,
    user_agent,
    active,
    created_by_user_id
) VALUES 
    (
        'sess_' || gen_random_uuid()::text,
        1, -- admin user
        NOW() + INTERVAL '7 days',
        '192.168.1.100'::INET,
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        TRUE,
        1
    ),
    (
        'sess_' || gen_random_uuid()::text,
        1, -- admin user  
        NOW() + INTERVAL '1 day',
        '192.168.1.101'::INET,
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
        TRUE,
        1
    ),
    (
        'sess_' || gen_random_uuid()::text,
        1, -- admin user
        NOW() - INTERVAL '1 hour', -- expired session
        '192.168.1.102'::INET,
        'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36',
        FALSE,
        1
    );

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
SELECT 
    COUNT(*) as total_sessions,
    COUNT(*) FILTER (WHERE active = TRUE) as active_sessions,
    COUNT(*) FILTER (WHERE active = FALSE) as inactive_sessions,
    COUNT(*) FILTER (WHERE expires_at > NOW()) as valid_sessions,
    COUNT(*) FILTER (WHERE expires_at <= NOW()) as expired_sessions
FROM public.user_sessions;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
SELECT 
    id,
    session_id,
    user_id,
    created_at,
    expires_at,
    ip_address,
    active,
    CASE 
        WHEN expires_at > NOW() THEN 'Valid'
        ELSE 'Expired'
    END as status
FROM public.user_sessions
ORDER BY created_at DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ foreign key –∑–≤'—è–∑–∫—ñ–≤
SELECT 
    s.session_id,
    s.user_id,
    u.username,
    u.role,
    s.active,
    s.expires_at
FROM public.user_sessions s
JOIN public.users u ON s.user_id = u.id
ORDER BY s.created_at DESC;

-- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å—ñ–≤
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'user_sessions' 
    AND schemaname = 'public'
ORDER BY indexname;