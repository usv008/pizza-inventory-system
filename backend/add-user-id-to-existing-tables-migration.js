const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'pizza_inventory.db');
const db = new sqlite3.Database(dbPath);

db.serialize(() => {
    console.log('üë§ –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –∫–æ–ª–æ–Ω–æ–∫ –¥–æ —ñ—Å–Ω—É—é—á–∏—Ö —Ç–∞–±–ª–∏—Ü—å...');

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ orders
    db.run(`ALTER TABLE orders ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ orders:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ orders');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ production
    db.run(`ALTER TABLE production ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ production:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ production');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ writeoffs
    db.run(`ALTER TABLE writeoffs ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ writeoffs:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ writeoffs');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ arrivals
    db.run(`ALTER TABLE arrivals ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ arrivals:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ arrivals');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ operations_log
    db.run(`ALTER TABLE operations_log ADD COLUMN user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ operations_log:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ user_id –¥–æ–¥–∞–Ω–∞ –¥–æ operations_log');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ stock_movements
    db.run(`ALTER TABLE stock_movements ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ stock_movements:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ stock_movements');
        }
    });

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ —Ç–∞–±–ª–∏—Ü—ñ production_plans
    db.run(`ALTER TABLE production_plans ADD COLUMN created_by_user_id INTEGER`, (err) => {
        if (err && !err.message.includes('duplicate column name')) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è user_id –¥–æ production_plans:', err);
        } else {
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_by_user_id –¥–æ–¥–∞–Ω–∞ –¥–æ production_plans');
        }
    });

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ–ª–æ–Ω–æ–∫
    setTimeout(() => {
        db.run(`CREATE INDEX IF NOT EXISTS idx_orders_created_by_user_id ON orders(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_orders_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_orders_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_production_created_by_user_id ON production(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_production_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_production_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_writeoffs_created_by_user_id ON writeoffs(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_writeoffs_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_writeoffs_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_arrivals_created_by_user_id ON arrivals(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_arrivals_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_arrivals_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_operations_log_user_id ON operations_log(user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_operations_log_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_operations_log_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_stock_movements_created_by_user_id ON stock_movements(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_stock_movements_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_stock_movements_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        db.run(`CREATE INDEX IF NOT EXISTS idx_production_plans_created_by_user_id ON production_plans(created_by_user_id)`, (err) => {
            if (err) console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É idx_production_plans_created_by_user_id:', err);
            else console.log('‚úÖ –Ü–Ω–¥–µ–∫—Å idx_production_plans_created_by_user_id —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        });

        console.log('üéâ –ú—ñ–≥—Ä–∞—Ü—ñ—è user_id –∫–æ–ª–æ–Ω–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        db.close();
    }, 1000); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è ALTER TABLE –æ–ø–µ—Ä–∞—Ü—ñ–π
}); 