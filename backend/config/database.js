/**
 * Database Configuration - —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ë–î
 * –ö–µ—Ä—É—î –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è–º –º—ñ–∂ SQLite —Ç–∞ Supabase
 */

require('dotenv').config();
const DatabaseAdapter = require('../adapters/DatabaseAdapter');

// –ß–∏—Ç–∞—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑ .env (–¥–∏–Ω–∞–º—ñ—á–Ω–æ)
function getUseSupabase() {
    return process.env.USE_SUPABASE === 'true';
}

function getMigrateSessionsToSupabase() {
    return process.env.MIGRATE_SESSIONS_TO_SUPABASE === 'true';
}

const USE_SUPABASE = getUseSupabase();
const MIGRATE_SESSIONS_TO_SUPABASE = getMigrateSessionsToSupabase();

console.log(`üîß Database Config: USE_SUPABASE=${USE_SUPABASE}, MIGRATE_SESSIONS=${MIGRATE_SESSIONS_TO_SUPABASE}`);

/**
 * –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–∞–ø—Ç–µ—Ä –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
 */
function createDatabaseAdapter() {
    const useSupabase = getUseSupabase(); // –î–∏–Ω–∞–º—ñ—á–Ω–æ —á–∏—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    return new DatabaseAdapter(useSupabase);
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ legacy SQLite –∑'—î–¥–Ω–∞–Ω–Ω—è (–¥–ª—è –ø–æ—Å—Ç—É–ø–æ–≤–æ—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó)
 */
function getLegacySQLiteConnection() {
    if (USE_SUPABASE) {
        console.warn('‚ö†Ô∏è  –£–≤–∞–≥–∞: –∑–∞–ø–∏—Ç legacy SQLite –∑\'—î–¥–Ω–∞–Ω–Ω—è –≤ Supabase —Ä–µ–∂–∏–º—ñ');
    }
    
    const sqlite3 = require('sqlite3').verbose();
    const path = require('path');
    const dbPath = path.join(__dirname, '..', process.env.SQLITE_DB_PATH || 'pizza_inventory.db');
    
    return new sqlite3.Database(dbPath);
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ Supabase –∫–ª—ñ—î–Ω—Ç (–¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π)
 */
function getSupabaseClient() {
    if (!getUseSupabase()) {
        throw new Error('Supabase –∫–ª—ñ—î–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –≤ SQLite —Ä–µ–∂–∏–º—ñ');
    }
    
    const { supabase } = require('../database-supabase');
    return supabase;
}

/**
 * –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è legacy —Å–µ—Ä–≤—ñ—Å—ñ–≤ (–ø–æ–∫–∏ –Ω–µ –º—ñ–≥—Ä–æ–≤–∞–Ω—ñ)
 * –ë—É–¥–µ –ø–æ—Å—Ç—É–ø–æ–≤–æ –≤–∏–¥–∞–ª—è—Ç–∏—Å—è –ø—ñ—Å–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É
 */
function getLegacyQueries() {
    if (getUseSupabase()) {
        // –í Supabase —Ä–µ–∂–∏–º—ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ Supabase-—Å—É–º—ñ—Å–Ω—ñ –∑–∞–ø–∏—Ç–∏
        return {
            productQueries: require('../queries/supabase/productQueries'),
            clientQueries: require('../queries/supabase/clientQueries'),
            userQueries: require('../queries/supabase/userQueries'),
            orderQueries: require('../queries/supabase/orderQueries'),
            movementQueries: require('../queries/supabase/movementQueries'),
            productionQueries: require('../queries/supabase/productionQueries'),
            writeoffQueries: require('../queries/supabase/writeoffQueries')
        };
    } else {
        // –í SQLite —Ä–µ–∂–∏–º—ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏
        return {
            productQueries: require('../queries/sqlite/productQueries'),
            clientQueries: require('../queries/sqlite/clientQueries'),
            userQueries: require('../queries/sqlite/userQueries'),
            orderQueries: require('../queries/sqlite/orderQueries'),
            movementQueries: require('../queries/sqlite/movementQueries'),
            productionQueries: require('../queries/sqlite/productionQueries'),
            writeoffQueries: require('../queries/sqlite/writeoffQueries')
        };
    }
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –æ–±—Ä–∞–Ω–æ—ó –ë–î
 */
async function checkDatabaseConnection() {
    try {
        const adapter = createDatabaseAdapter();
        const connected = await adapter.testConnection();
        
        if (connected) {
            console.log(`‚úÖ ${USE_SUPABASE ? 'Supabase' : 'SQLite'} –∑'—î–¥–Ω–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ`);
            return true;
        } else {
            console.error(`‚ùå ${USE_SUPABASE ? 'Supabase' : 'SQLite'} –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –≤–¥–∞–ª–æ—Å—è`);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ –ë–î:', error.message);
        return false;
    }
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ë–î
 */
async function getDatabaseStats() {
    const adapter = createDatabaseAdapter();
    const tables = ['users', 'products', 'clients', 'orders', 'stock_movements'];
    const stats = {};
    
    for (const tableName of tables) {
        try {
            const records = await adapter.table(tableName).select('*');
            stats[tableName] = records.length;
        } catch (error) {
            stats[tableName] = `error: ${error.message}`;
        }
    }
    
    adapter.close(); // –ó–∞–∫—Ä–∏—Ç–∏ SQLite –∑'—î–¥–Ω–∞–Ω–Ω—è
    return stats;
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Ä–µ–∂–∏–º –ë–î (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
 */
function switchDatabaseMode(useSupabase) {
    process.env.USE_SUPABASE = useSupabase.toString();
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ ${useSupabase ? 'Supabase' : 'SQLite'} —Ä–µ–∂–∏–º`);
}

module.exports = {
    // –û—Å–Ω–æ–≤–Ω—ñ
    USE_SUPABASE,
    MIGRATE_SESSIONS_TO_SUPABASE,
    createDatabaseAdapter,
    
    // Legacy (–¥–ª—è –ø–æ—Å—Ç—É–ø–æ–≤–æ—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó)
    getLegacySQLiteConnection,
    getSupabaseClient,
    getLegacyQueries,
    
    // –£—Ç–∏–ª—ñ—Ç–∏
    checkDatabaseConnection,
    getDatabaseStats,
    switchDatabaseMode
};