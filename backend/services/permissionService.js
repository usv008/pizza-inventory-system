const { DatabaseError, NotFoundError, ValidationError } = require('../middleware/errors/AppError');

/**
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 * –†–µ–∞–ª—ñ–∑—É—î –≥—ñ–±—Ä–∏–¥–Ω—É —Å–∏—Å—Ç–µ–º—É: –±–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∞ –∑–∞ —Ä–æ–ª–ª—é + —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
 */
class PermissionService {
    constructor() {
        this.cache = new Map();
        this.cacheExpiry = 5 * 60 * 1000; // 5 —Ö–≤–∏–ª–∏–Ω
        this.initialized = false;
        
        // –ë–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∞ –∑–∞ —Ä–æ–ª—è–º–∏ (default permissions matrix)
        this.roleDefaults = {
            '–î–ò–†–ï–ö–¢–û–†': { 
                admin: { all_rights: true }
            },
            '–ó–ê–í–Ü–î–£–Æ–ß–ò–ô_–í–ò–†–û–ë–ù–ò–¶–¢–í–û–ú': {
                production: { read: true, write: true },
                writeoffs: { read: true, write: true },
                arrivals: { read: true, write: true }
            },
            '–ë–£–•–ì–ê–õ–¢–ï–†': {
                orders: { read: true, write: true, create: true },
                writeoffs: { read: true, write: true },
                operations: { delete: true }
            },
            '–ü–ê–ö–£–í–ê–õ–¨–ù–ò–ö': {
                production: { read: true, write: true },
                shipments: { write: true }
            },
            '–ö–û–ú–Ü–†–ù–ò–ö': {
                arrivals: { read: true, write: true },
                writeoffs: { read: true, write: true },
                products: { create: true }
            },
            '–ú–ï–ù–ï–î–ñ–ï–†_–ó_–ü–†–û–î–ê–ñ–Ü–í': {
                orders: { read: true, write: true, create: true },
                shipments: { write: true }
            }
        };
        
        // –†–µ—î—Å—Ç—Ä –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø—Ä–∞–≤ (–¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è)
        this.permissionRegistry = {
            'orders.read': '–ü–µ—Ä–µ–≥–ª—è–¥ –∑–∞–º–æ–≤–ª–µ–Ω—å',
            'orders.write': '–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
            'orders.create': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
            'orders.delete': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
            'production.read': '–ü–µ—Ä–µ–≥–ª—è–¥ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞',
            'production.write': '–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞',
            'writeoffs.read': '–ü–µ—Ä–µ–≥–ª—è–¥ —Å–ø–∏—Å–∞–Ω—å',
            'writeoffs.write': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∞–Ω—å',
            'arrivals.read': '–ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–∏—Ö–æ–¥—ñ–≤',
            'arrivals.write': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏—Ö–æ–¥—ñ–≤',
            'products.create': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤',
            'shipments.write': '–í—ñ–¥–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤',
            'operations.delete': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π',
            'admin.all_rights': '–í—Å—ñ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É'
        };
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—É
     */
    initialize() {
        this.initialized = true;
        console.log('‚úÖ PermissionService —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –ø—Ä–∞–≤–æ
     * @param {number} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} permission - –ø—Ä–∞–≤–æ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ "module.action"
     * @returns {boolean} —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ü–µ –ø—Ä–∞–≤–æ
     */
    async hasPermission(userId, permission) {
        try {
            const userPermissions = await this.getUserPermissions(userId);
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–æ–∑–≤–æ–ª—è—î –≤—Å–µ)
            if (userPermissions.admin && userPermissions.admin.all_rights) {
                return true;
            }
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–∑–≤–æ–ª—É
            const [module, action] = permission.split('.');
            
            if (!module || !action) {
                console.warn(`‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç permission: ${permission}`);
                return false;
            }
            
            return userPermissions[module] && userPermissions[module][action] === true;
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤–∞ ${permission} –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId}:`, error);
            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–∞ –± –æ–¥–Ω–µ –∑ –ø—Ä–∞–≤
     * @param {number} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {Array<string>} permissions - –º–∞—Å–∏–≤ –ø—Ä–∞–≤
     * @returns {boolean} —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–∞ –± –æ–¥–Ω–µ –ø—Ä–∞–≤–æ
     */
    async hasAnyPermission(userId, permissions) {
        if (!Array.isArray(permissions) || permissions.length === 0) {
            return false;
        }

        for (const permission of permissions) {
            if (await this.hasPermission(userId, permission)) {
                return true;
            }
        }
        
        return false;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—Å—ñ –∑–∞–∑–Ω–∞—á–µ–Ω—ñ –ø—Ä–∞–≤–∞
     * @param {number} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {Array<string>} permissions - –º–∞—Å–∏–≤ –ø—Ä–∞–≤
     * @returns {boolean} —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—Å—ñ –ø—Ä–∞–≤–∞
     */
    async hasAllPermissions(userId, permissions) {
        if (!Array.isArray(permissions) || permissions.length === 0) {
            return true;
        }

        for (const permission of permissions) {
            if (!(await this.hasPermission(userId, permission))) {
                return false;
            }
        }
        
        return true;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—Ä–∞–≤–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∫–µ—à–æ–≤–∞–Ω–æ)
     * @param {number} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Object} –æ–±'—î–∫—Ç –∑ –ø—Ä–∞–≤–∞–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async getUserPermissions(userId) {
        const cacheKey = `permissions_${userId}`;
        const cached = this.cache.get(cacheKey);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–µ—à—É
        if (cached && Date.now() - cached.timestamp < this.cacheExpiry) {
            return cached.permissions;
        }
        
        try {
            // –î–∏–Ω–∞–º—ñ—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ database —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ circular dependency
            const database = require('../database');
            if (!database.userQueries) {
                throw new DatabaseError('UserQueries –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ');
            }
            
            const user = await database.userQueries.getById(userId);
            if (!user) {
                throw new NotFoundError(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID ${userId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            }
            
            // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∞ –∑–∞ —Ä–æ–ª–ª—é
            const rolePermissions = this.roleDefaults[user.role] || {};
            
            // –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
            const userOverrides = JSON.parse(user.permissions || '{}');
            
            // –û–±'—î–¥–Ω—É—î–º–æ –ø—Ä–∞–≤–∞ (userOverrides –º–∞—é—Ç—å –≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç)
            const finalPermissions = this.mergeDeep(rolePermissions, userOverrides);
            
            // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.cache.set(cacheKey, {
                permissions: finalPermissions,
                timestamp: Date.now()
            });
            
            return finalPermissions;
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId}:`, error);
            return {};
        }
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à –ø—Ä–∞–≤ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {number} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∞–±–æ null –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ –∫–µ—à—É)
     */
    clearUserCache(userId = null) {
        if (userId) {
            const cacheKey = `permissions_${userId}`;
            this.cache.delete(cacheKey);
            console.log(`üßπ –û—á–∏—â–µ–Ω–æ –∫–µ—à –ø—Ä–∞–≤ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId}`);
        } else {
            this.cache.clear();
            console.log('üßπ –û—á–∏—â–µ–Ω–æ –≤–µ—Å—å –∫–µ—à –ø—Ä–∞–≤');
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∞ –¥–ª—è —Ä–æ–ª—ñ
     * @param {string} role - –Ω–∞–∑–≤–∞ —Ä–æ–ª—ñ
     * @returns {Object} –æ–±'—î–∫—Ç –∑ –±–∞–∑–æ–≤–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏
     */
    getRolePermissions(role) {
        return this.roleDefaults[role] || {};
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–∞–≤
     * @returns {Object} —Ä–µ—î—Å—Ç—Ä –≤—Å—ñ—Ö –ø—Ä–∞–≤ –∑ –æ–ø–∏—Å–∞–º–∏
     */
    getAllPermissions() {
        return { ...this.permissionRegistry };
    }

    /**
     * –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ –Ω–æ–≤–µ –ø—Ä–∞–≤–æ
     * @param {string} permission - –ø—Ä–∞–≤–æ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ "module.action"
     * @param {string} description - –æ–ø–∏—Å –ø—Ä–∞–≤–∞
     */
    registerPermission(permission, description) {
        if (!permission || !permission.includes('.')) {
            throw new ValidationError('–ü—Ä–∞–≤–æ –º–∞—î –±—É—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ "module.action"');
        }
        
        this.permissionRegistry[permission] = description;
        console.log(`‚ûï –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤–µ –ø—Ä–∞–≤–æ: ${permission} - ${description}`);
        
        // –û—á–∏—â–∞—î–º–æ –∫–µ—à –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –Ω–æ–≤–∏—Ö –ø—Ä–∞–≤
        this.clearUserCache();
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–∞–≤–∞ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ –¥–ª—è UI
     * @returns {Object} —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –ø—Ä–∞–≤–∞ –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
     */
    getPermissionsForUI() {
        const categories = {
            'orders': {
                name: '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                permissions: {
                    'read': '–ü–µ—Ä–µ–≥–ª—è–¥ –∑–∞–º–æ–≤–ª–µ–Ω—å',
                    'write': '–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å', 
                    'create': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
                    'delete': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å'
                }
            },
            'production': {
                name: '–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ',
                permissions: {
                    'read': '–ü–µ—Ä–µ–≥–ª—è–¥ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞',
                    'write': '–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞'
                }
            },
            'writeoffs': {
                name: '–°–ø–∏—Å–∞–Ω–Ω—è',
                permissions: {
                    'read': '–ü–µ—Ä–µ–≥–ª—è–¥ —Å–ø–∏—Å–∞–Ω—å',
                    'write': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∞–Ω—å'
                }
            },
            'arrivals': {
                name: '–ü—Ä–∏—Ö–æ–¥–∏',
                permissions: {
                    'read': '–ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–∏—Ö–æ–¥—ñ–≤',
                    'write': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏—Ö–æ–¥—ñ–≤'
                }
            },
            'products': {
                name: '–¢–æ–≤–∞—Ä–∏',
                permissions: {
                    'create': '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤'
                }
            },
            'shipments': {
                name: '–í—ñ–¥–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
                permissions: {
                    'write': '–í—ñ–¥–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤'
                }
            },
            'operations': {
                name: '–û–ø–µ—Ä–∞—Ü—ñ—ó',
                permissions: {
                    'delete': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π'
                }
            },
            'admin': {
                name: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è',
                permissions: {
                    'all_rights': '–í—Å—ñ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É'
                }
            }
        };
        
        return categories;
    }

    /**
     * –ì–ª–∏–±–æ–∫–µ –æ–±'—î–¥–Ω–∞–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –ø—Ä–∞–≤
     * @param {Object} target - –±–∞–∑–æ–≤–∏–π –æ–±'—î–∫—Ç
     * @param {Object} source - –æ–±'—î–∫—Ç —â–æ –Ω–∞–∫–ª–∞–¥–∞—î—Ç—å—Å—è
     * @returns {Object} –æ–±'—î–¥–Ω–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
     */
    mergeDeep(target, source) {
        const result = { ...target };
        
        for (const key in source) {
            if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {
                result[key] = this.mergeDeep(result[key] || {}, source[key]);
            } else {
                result[key] = source[key];
            }
        }
        
        return result;
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–∞–≤
     * @param {Object} permissions - –æ–±'—î–∫—Ç –∑ –ø—Ä–∞–≤–∞–º–∏
     * @returns {boolean} —á–∏ –≤–∞–ª—ñ–¥–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
     */
    validatePermissionStructure(permissions) {
        if (!permissions || typeof permissions !== 'object') {
            return false;
        }
        
        for (const module in permissions) {
            if (typeof permissions[module] !== 'object') {
                return false;
            }
            
            for (const action in permissions[module]) {
                if (typeof permissions[module][action] !== 'boolean') {
                    return false;
                }
            }
        }
        
        return true;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
     * @returns {Object} —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–∞–≤
     */
    getCacheStats() {
        return {
            total_cached_users: this.cache.size,
            cache_expiry_minutes: this.cacheExpiry / (60 * 1000),
            total_permissions: Object.keys(this.permissionRegistry).length,
            available_roles: Object.keys(this.roleDefaults)
        };
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ singleton instance
module.exports = new PermissionService(); 