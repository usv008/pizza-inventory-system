/**
 * –¢–µ—Å—Ç –º—ñ–≥—Ä–∞—Ü—ñ—ó Production Service v2
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ä–æ–±–æ—Ç—É –∑ –æ–±–æ–º–∞ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö: SQLite —ñ Supabase
 */

require('dotenv').config();
const ProductionServiceV2 = require('./services/productionService-v2');
const ProductServiceV2 = require('./services/productService-v2');

// –ú–æ–∫–∞—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è —Ç–µ—Å—Ç—ñ–≤
const mockOperationsLogController = {
    OPERATION_TYPES: {
        PRODUCTION: 'PRODUCTION',
        BATCH_RESERVATION: 'BATCH_RESERVATION'
    },
    logOperation: async (data) => {
        console.log('üìù [MOCK] –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó:', data.operation_type);
        return true;
    }
};

async function testProductionServiceMigration() {
    console.log('üß™ ===== –¢–ï–°–¢ –ú–Ü–ì–†–ê–¶–Ü–á PRODUCTION SERVICE =====\n');
    
    try {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏
        ProductionServiceV2.initialize({ 
            OperationsLogController: mockOperationsLogController
        });
        ProductServiceV2.initialize({ OperationsLogController: mockOperationsLogController });
        
        const useSupabase = process.env.USE_SUPABASE === 'true';
        console.log(`üîß –†–µ–∂–∏–º –ë–î: ${useSupabase ? 'Supabase PostgreSQL' : 'SQLite'}\n`);
        
        // 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        console.log('üì¶ 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è...');
        const products = await ProductServiceV2.getAllProducts();
        
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è`);
        
        if (products.length === 0) {
            throw new Error('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞');
        }
        
        const testProduct = products[0];
        console.log(`üìã –¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä: "${testProduct.name}" (ID: ${testProduct.id})`);
        console.log(`üè≠ –ö–æ—Ä–æ–±–∫–∏ –ø–æ: ${testProduct.pieces_per_box} —à—Ç\n`);
        
        // 2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
        console.log('üìã 2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞...');
        const existingProduction = await ProductionServiceV2.getAllProduction({ limit: 10 });
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${existingProduction.production.length} –∑–∞–ø–∏—Å—ñ–≤ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞`);
        
        existingProduction.production.forEach((record, index) => {
            console.log(`   ${index + 1}. ${record.product_name || `–¢–æ–≤–∞—Ä ${record.product_id}`}: ${record.total_quantity} —à—Ç (${record.production_date})`);
        });
        
        if (existingProduction.stats) {
            console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –≤—Å—å–æ–≥–æ ${existingProduction.stats.total_quantity} —à—Ç –∑–∞ ${existingProduction.stats.total_records} –∑–∞–ø–∏—Å—ñ–≤`);
        }
        console.log('');
        
        // 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
        console.log('‚ûï 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞...');
        const today = new Date().toISOString().split('T')[0];
        const productionData = {
            product_id: testProduct.id,
            production_date: today,
            total_quantity: 48, // 4 –∫–æ—Ä–æ–±–∫–∏ –ø–æ 12 —à—Ç—É–∫
            responsible: 'test-user',
            notes: '–¢–µ—Å—Ç–æ–≤–µ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó'
        };
        
        const newProduction = await ProductionServiceV2.createProduction(productionData, {
            user: 'test-user',
            userId: 1
        });
        
        console.log(`‚úÖ –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ: ID ${newProduction.production.id}`);
        console.log(`üì¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${newProduction.production.total_quantity} —à—Ç`);
        console.log(`üìä –ö–æ—Ä–æ–±–∫–∏: ${newProduction.production.boxes_quantity}, –®—Ç—É–∫–∏: ${newProduction.production.pieces_quantity}`);
        console.log(`üè∑Ô∏è –ü–∞—Ä—Ç—ñ—è: ${newProduction.production.batch_date}\n`);
        
        // 4. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –∑–∞ —Ç–æ–≤–∞—Ä–æ–º
        console.log('üîç 4. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –∑–∞ —Ç–æ–≤–∞—Ä–æ–º...');
        const productionByProduct = await ProductionServiceV2.getProductionByProductId(testProduct.id);
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${productionByProduct.production.length} –∑–∞–ø–∏—Å—ñ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä—É "${testProduct.name}"`);
        
        productionByProduct.production.slice(0, 3).forEach((record, index) => {
            console.log(`   ${index + 1}. ${record.total_quantity} —à—Ç (${record.production_date}) - –ø–∞—Ä—Ç—ñ—è –¥–æ—Å—Ç—É–ø–Ω–æ: ${record.batch_available || 'N/A'}`);
        });
        
        if (productionByProduct.stats) {
            console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä—É: –≤—Å—å–æ–≥–æ ${productionByProduct.stats.total_quantity} —à—Ç`);
        }
        console.log('');
        
        // 5. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–∞—Ä—Ç—ñ–π
        console.log('üì¶ 5. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–∞—Ä—Ç—ñ–π...');
        try {
            const availableBatches = await ProductionServiceV2.getAvailableBatches(testProduct.id);
            console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${availableBatches.length} –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–∞—Ä—Ç—ñ–π`);
            
            availableBatches.slice(0, 3).forEach((batch, index) => {
                console.log(`   ${index + 1}. –ü–∞—Ä—Ç—ñ—è ${batch.batch_date}: ${batch.available_quantity} —à—Ç –¥–æ—Å—Ç—É–ø–Ω–æ (–∑ ${batch.total_quantity} —à—Ç)`);
            });
        } catch (error) {
            console.log(`‚ö†Ô∏è –ü–∞—Ä—Ç—ñ—ó –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ: ${error.message} (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –¥–µ—è–∫–∏—Ö –ë–î)`);
        }
        console.log('');
        
        // 6. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Ç—ñ–π
        console.log('üîí 6. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Ç—ñ–π...');
        try {
            const reservationResult = await ProductionServiceV2.reserveBatchesForProduct(
                testProduct.id, 
                12, // —Ä–µ–∑–µ—Ä–≤—É—î–º–æ 12 —à—Ç—É–∫
                { user: 'test-user' }
            );
            
            console.log(`‚úÖ –†–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è: ${reservationResult.success ? '—É—Å–ø—ñ—à–Ω–æ' : '–ø–æ–º–∏–ª–∫–∞'}`);
            console.log(`üìä –ó–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ: ${reservationResult.total_reserved} —à—Ç`);
            
            if (reservationResult.allocations) {
                console.log(`üì¶ –í ${reservationResult.allocations.length} –ø–∞—Ä—Ç—ñ—è—Ö:`);
                reservationResult.allocations.forEach((alloc, index) => {
                    console.log(`   ${index + 1}. –ü–∞—Ä—Ç—ñ—è ${alloc.batch_date}: ${alloc.allocated_quantity} —à—Ç`);
                });
            }
        } catch (error) {
            console.log(`‚ö†Ô∏è –†–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ: ${error.message} (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –¥–µ—è–∫–∏—Ö –ë–î)`);
        }
        console.log('');
        
        // 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –∑–∞ –ø–µ—Ä—ñ–æ–¥
        console.log('üìä 7. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞...');
        const oneMonthAgo = new Date();
        oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);
        const startDate = oneMonthAgo.toISOString().split('T')[0];
        const endDate = new Date().toISOString().split('T')[0];
        
        const stats = await ProductionServiceV2.getProductionStatistics(startDate, endDate);
        
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –ø–µ—Ä—ñ–æ–¥ ${stats.period.start} - ${stats.period.end}:`);
        console.log(`   –í—Å—å–æ–≥–æ –∑–∞–ø–∏—Å—ñ–≤: ${stats.overview.total_records}`);
        console.log(`   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${stats.overview.total_quantity} —à—Ç`);
        console.log(`   –£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤: ${stats.overview.unique_products}`);
        
        if (stats.by_products && stats.by_products.length > 0) {
            console.log(`üì¶ –ü–æ —Ç–æ–≤–∞—Ä–∞—Ö:`);
            stats.by_products.slice(0, 3).forEach((productStat, index) => {
                console.log(`   ${index + 1}. ${productStat.product_name || `–¢–æ–≤–∞—Ä ${productStat.product_id}`}: ${productStat.total_quantity} —à—Ç (${productStat.records_count} –∑–∞–ø–∏—Å—ñ–≤)`);
            });
        }
        console.log('');
        
        // 8. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
        console.log('üîç 8. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞...');
        const filteredProduction = await ProductionServiceV2.getAllProduction({
            product_id: testProduct.id,
            start_date: startDate
        });
        
        console.log(`‚úÖ –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –ø–æ —Ç–æ–≤–∞—Ä—É ${testProduct.id}: –∑–Ω–∞–π–¥–µ–Ω–æ ${filteredProduction.production.length} –∑–∞–ø–∏—Å—ñ–≤`);
        console.log(`üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${filteredProduction.stats.total_quantity} —à—Ç\n`);
        
        // 9. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó –ø–∞—Ä—Ç—ñ—ó –≤ –∑–∞–≥–∞–ª—å–Ω–æ–º—É —Å–ø–∏—Å–∫—É
        console.log('üîç 9. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞...');
        const updatedProduction = await ProductionServiceV2.getAllProduction({ limit: 5 });
        console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫: ${updatedProduction.production.length} –∑–∞–ø–∏—Å—ñ–≤`);
        
        const newRecord = updatedProduction.production.find(p => p.id === newProduction.production.id);
        if (newRecord) {
            console.log(`‚úÖ –ù–æ–≤–∏–π –∑–∞–ø–∏—Å –∑–Ω–∞–π–¥–µ–Ω–æ: ${newRecord.product_name || '–¢–æ–≤–∞—Ä'} - ${newRecord.total_quantity} —à—Ç`);
        } else {
            console.log(`‚ö†Ô∏è –ù–æ–≤–∏–π –∑–∞–ø–∏—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫—É (–º–æ–∂–µ –±—É—Ç–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö)`);
        }
        
        console.log('\nüéâ ===== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û =====');
        console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ${useSupabase ? 'Supabase' : 'SQLite'}`);
        console.log('‚úÖ –í—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ–º –ø—Ä–∞—Ü—é—é—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ');
        console.log('‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø—Ä–æ—Ç–µ—Å—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–∞—Ä—Ç—ñ–π (FIFO) –ø—Ä–∞—Ü—é—î');
        console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—á–∏—Å–ª—é—é—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
        console.log('‚úÖ ProductionService v2 –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è\n');
        
    } catch (error) {
        console.error('‚ùå –ü–û–ú–ò–õ–ö–ê –í –¢–ï–°–¢–Ü:', error);
        console.error('üìç Stack trace:', error.stack);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
if (require.main === module) {
    testProductionServiceMigration()
        .then(() => {
            console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { testProductionServiceMigration };