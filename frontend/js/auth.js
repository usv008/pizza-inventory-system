// frontend/js/auth.js - –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é (localStorage –≤–µ—Ä—Å—ñ—è)

class AuthManager {
    constructor() {
        this.apiUrl = 'http://localhost:3000/api';
        this.currentUser = null;
        this.storageKey = 'pizza_user';
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ—ó "—Å–µ—Å—ñ—ó" —á–µ—Ä–µ–∑ localStorage
    async checkSession() {
        try {
            const userData = localStorage.getItem(this.storageKey);
            
            if (userData) {
                const user = JSON.parse(userData);
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –∞–∫—Ç–∏–≤–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º—ñ
                const response = await fetch(`${this.apiUrl}/auth/users`);
                
                if (response.ok) {
                    const apiData = await response.json();
                    // Handle both array format and wrapper format
                    const users = Array.isArray(apiData) ? apiData : (apiData.data || []);
                    const activeUser = users.find(u => 
                        u.username === user.username && u.active === 1
                    );
                        
                    if (activeUser) {
                        this.currentUser = {
                            id: activeUser.id,
                            username: activeUser.username,
                            role: activeUser.role,
                            email: activeUser.email,
                            loginTime: user.loginTime
                        };
                        return true;
                    }
                }
            }
            
            // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –∞–±–æ –≤—ñ–Ω –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π - –æ—á–∏—â—É—î–º–æ localStorage
            this.currentUser = null;
            localStorage.removeItem(this.storageKey);
            return false;
            
        } catch (error) {
            console.error('Session check failed:', error);
            this.currentUser = null;
            localStorage.removeItem(this.storageKey);
            return false;
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    async isAuthenticated() {
        return await this.checkSession();
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    getCurrentUser() {
        return this.currentUser;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    hasRole(role) {
        return this.currentUser && this.currentUser.role === role;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä
    isAdmin() {
        return this.hasRole('–î–ò–†–ï–ö–¢–û–†');
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –¥–∏—Ä–µ–∫—Ç–æ—Ä
    isDirector() {
        return this.hasRole('–î–ò–†–ï–ö–¢–û–†');
    }

    // –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏
    async logout() {
        try {
            // –û—á–∏—â—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
            this.currentUser = null;
            localStorage.removeItem(this.storageKey);

            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É
            window.location.href = '/login.html';

        } catch (error) {
            console.error('Logout failed:', error);
            
            // –§–æ—Ä—Å–æ–≤–∞–Ω–∏–π –≤–∏—Ö—ñ–¥
            this.currentUser = null;
            localStorage.removeItem(this.storageKey);
            window.location.href = '/login.html';
        }
    }

    // –ó–∞—Ö–∏—Å—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –ª–æ–≥—ñ–Ω —è–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    async requireAuth() {
        const isAuth = await this.isAuthenticated();
        if (!isAuth) {
            window.location.href = '/login.html';
            return false;
        }
        return true;
    }

    // –ó–∞—Ö–∏—Å—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —Ä–æ–ª—ñ
    async requireRole(role) {
        const isAuth = await this.requireAuth();
        if (!isAuth) return false;

        if (!this.hasRole(role)) {
            this.showAccessDenied();
            return false;
        }
        return true;
    }

    // –ó–∞—Ö–∏—Å—Ç –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫
    async requireAdmin() {
        const isAuth = await this.requireAuth();
        if (!isAuth) return false;

        if (!this.isAdmin()) {
            this.showAccessDenied();
            return false;
        }
        return true;
    }

    // –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥–º–æ–≤—É –≤ –¥–æ—Å—Ç—É–ø—ñ
    showAccessDenied() {
        const message = '–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏';
        
        if (typeof showUserError === 'function') {
            showUserError(message);
        } else {
            alert(message);
        }
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        setTimeout(() => {
            window.location.href = '/';
        }, 2000);
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    async init() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        await this.checkSession();
        
        // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
        this.updateUserDisplay();
        
        return this.currentUser !== null;
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    updateUserDisplay() {
        const userInfo = document.getElementById('user-info');
        if (userInfo && this.currentUser) {
            userInfo.innerHTML = `
                <div class="user-menu">
                    <span class="user-name">üë§ ${this.currentUser.username}</span>
                    <span class="user-role">(${this.currentUser.role})</span>
                    <button onclick="authManager.logout()" class="btn btn-secondary btn-small">–í–∏—Ö—ñ–¥</button>
                </div>
            `;
        }
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    getUserInfo() {
        if (!this.currentUser) {
            return null;
        }
        
        return {
            username: this.currentUser.username,
            role: this.currentUser.role,
            email: this.currentUser.email,
            loginTime: this.currentUser.loginTime
        };
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—ó –Ω–∞–∑–≤–∏ —Ä–æ–ª—ñ
    getRoleLabel(role) {
        const roleLabels = {
            '–î–ò–†–ï–ö–¢–û–†': '–î–∏—Ä–µ–∫—Ç–æ—Ä',
            '–ë–£–•–ì–ê–õ–¢–ï–†': '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', 
            '–ó–ê–í–Ü–î–£–Æ–ß–ò–ô_–í–ò–†–û–ë–ù–ò–¶–¢–í–û–ú': '–ó–∞–≤—ñ–¥—É—é—á–∏–π –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ–º',
            '–ü–†–ê–¶–Ü–í–ù–ò–ö_–°–ö–õ–ê–î–£': '–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ —Å–∫–ª–∞–¥—É'
        };
        
        return roleLabels[role] || role;
    }

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    createUserElement() {
        if (!this.currentUser) {
            return null;
        }

        const userElement = document.createElement('div');
        userElement.className = 'user-menu';
        userElement.innerHTML = `
            <span class="user-name">üë§ ${this.currentUser.username}</span>
            <span class="user-role">(${this.currentUser.role})</span>
            <button onclick="authManager.logout()" class="btn btn-secondary btn-small">–í–∏—Ö—ñ–¥</button>
        `;
        
        return userElement;
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
const authManager = new AuthManager();
window.authManager = authManager;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
document.addEventListener('DOMContentLoaded', function() {
    authManager.init();
});

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ —ñ—Å–Ω—É—é—á–∏–º –∫–æ–¥–æ–º
function toggleUserMenu() {
    // –ë–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
    console.log('User menu toggle');
}

function showUserProfile() {
    if (authManager.currentUser) {
        alert(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${authManager.currentUser.username}\n–†–æ–ª—å: ${authManager.currentUser.role}`);
    }
}

function changePassword() {
    alert('–§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è –ø–æ–∫–∏ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
}
